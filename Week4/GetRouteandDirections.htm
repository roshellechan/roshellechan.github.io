<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no">
  <title>ArcGIS JavaScript Tutorials: Get a route and directions</title>

  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>

  <style>
    html, body, #viewDiv {
      padding: 0;
      margin: 0;
      height: 100%;
      width: 100%;
    }

    h1 {
          font-size: 26px;
          margin-bottom: 2%;
          margin-top: 2%;
          }
      
      p {
          margin-bottom: 0;
      }
      
      ul {
          margin-bottom: 5%;
      }
    
      .page-footer {
        font-size: 14px;
        background-color: whitesmoke;
        margin-top: 3%;
      }
          .container {
            margin-bottom:3%;
        }



  </style>
  
  <link rel="stylesheet" href="https://js.arcgis.com/4.13/esri/css/main.css">
  <script src="https://js.arcgis.com/4.13/"></script>
  
  <script>  
    require([
      "esri/Map",
      "esri/views/MapView",      
      "esri/Graphic",
      "esri/tasks/RouteTask",
      "esri/tasks/support/RouteParameters",
        "esri/tasks/support/FeatureSet"
    ], function(Map, MapView, Graphic, RouteTask, RouteParameters, FeatureSet) {

      var map = new Map({
        basemap: "streets-navigation-vector"
      });
      
      var view = new MapView({
        container: "viewDiv",
        map: map,
        center: [-118.24532,34.05398],
        zoom: 12
      });
      
      // To allow access to the route service and prevent the user from signing in, do the Challenge step in the lab to set up a service proxy
      
      var routeTask = new RouteTask({
         url: "https://utility.arcgis.com/usrsvcs/appservices/JkpYPa0Gb2nfu2Tf/rest/services/World/Route/NAServer/Route_World/solve"
        });

      view.on("click", function(event){
        if (view.graphics.length === 0) {
          addGraphic("start", event.mapPoint);
        } else if (view.graphics.length === 1) {
          addGraphic("finish", event.mapPoint);
          // Call the route service
          getRoute();
        } else {
          view.graphics.removeAll();
          addGraphic("start",event.mapPoint);
        }
      });
      
      function addGraphic(type, point) {
        var graphic = new Graphic({
          symbol: {
            type: "simple-marker",
            color: (type === "start") ? "white" : "black",
            size: "8px"
          },
          geometry: point
        });
        view.graphics.add(graphic);
      }
    
      function getRoute() {
        // Setup the route parameters
        var routeParams = new RouteParameters({
          stops: new FeatureSet({
            features: view.graphics.toArray()
          }),
          returnDirections: true
        });
        // Get the route
        routeTask.solve(routeParams).then(function(data) {
          data.routeResults.forEach(function(result) {
            result.route.symbol = {
              type: "simple-line",
              color: [5, 150, 255],
              width: 3
            };
            view.graphics.add(result.route); 
          });
          
        });
      }
      
      function getRoute() {
        // Setup the route parameters
        var routeParams = new RouteParameters({
          stops: new FeatureSet({
            features: view.graphics.toArray() // Pass the array of graphics
          }),
          returnDirections: true
        });
        // Get the route
        routeTask.solve(routeParams).then(function(data) {
          // Display the route
          data.routeResults.forEach(function(result) {
            result.route.symbol = {
              type: "simple-line",
              color: [5, 150, 255],
              width: 3
            };
            view.graphics.add(result.route);
          });

          //*** ADD ***//

          // Display the directions
          var directions = document.createElement("ol");
          directions.classList = "esri-widget esri-widget--panel esri-directions__scroller";
          directions.style.marginTop = 0;
          directions.style.paddingTop = "15px";

          // Show the directions
          var features = data.routeResults[0].directions.features;
          features.forEach(function(result,i){
            var direction = document.createElement("li");
            direction.innerHTML = result.attributes.text + " (" + result.attributes.length.toFixed(2) + " miles)";
            directions.appendChild(direction);
          });

          // Add directions to the view
          view.ui.empty("top-right");
          view.ui.add(directions, "top-right");
        });
      }



    });
  </script>
</head>
<body>
  <nav class="navbar navbar-expand-sm bg-light navbar-light">
    <!-- Logo -->
    <a class="navbar-brand" href="../index.html">GEOM99 Tutorial Demos</a>
  
    <!-- Links -->
    <ul class="navbar-nav">
  
      <!-- Dropdown -->
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbardrop" data-toggle="dropdown">
          Week 1</a>
        <div class="dropdown-menu">
          <a class="dropdown-item" href="../Week1/MyMaps.htm">MyMaps</a>
          <a class="dropdown-item" href="../Week1/MapsJS.htm">Maps JavaScript</a>
          <a class="dropdown-item" href="../Week1/Directions.htm">Directions</a>
          <a class="dropdown-item" href="../Week1/Places.htm">Places</a>
        </div>
      </li>

      <!-- Dropdown -->
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbardrop" data-toggle="dropdown">
          Week 2</a>
        <div class="dropdown-menu">
          <a class="dropdown-item" href="../Week2/AddMarker.htm">Add Marker</a>
          <a class="dropdown-item" href="../Week2/Clustering.htm">Clustering</a>
          <a class="dropdown-item" href="../Week2/Earthquakes.htm">Earthquakes</a>
          <a class="dropdown-item" href="../Week2/Heatmap.htm">Heatmap</a>
          <a class="dropdown-item" href="../Week2/Project.htm">Project</a>
        </div>
      </li>

      <!-- Dropdown -->
      <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navbardrop" data-toggle="dropdown">
            Week 3</a>
          <div class="dropdown-menu">
            <a class="dropdown-item" href="AccessService.htm">Access services with OAuth 2.0</a>
            <a class="dropdown-item" href="GetRouteandDirections.htm">Get a route and directions</a>
            <a class="dropdown-item" href="QueryFeatureLayer.htm">Query a feature layer</a>
          </div>
        </li>        

    </ul>
  </nav>
  
  <div class="container">
    <h1>ArcGIS DevLabs Tutorial 2: Get a route and directions </h1>
    <p>This demo uses the RouteTask and the ArcGIS World Routing Service to calculate an 
      optimal route between two places. The start and finish points are created by 
      clicking on the map. Directions are also shown. A service proxy is further used to 
     access the ArcGIS World Routing Service directly and prevent the application from 
     prompting the user for authentication.</p>  
  </div>

  <div id="viewDiv"></div>

    <!-- Footer -->
    <footer class="page-footer font-small">
      <div class="footer-copyright text-center py-3">Created by Roshelle Chan | 
          <a href="https://developers.arcgis.com/labs/javascript/get-a-route-and-directions/
          "> Tutorial Reference </a>
      </div>
    </footer>
</body>
</html>